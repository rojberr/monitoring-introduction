version: '3.8'

services:

  traefik:
    image: traefik:v2.5.4
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--providers.docker=true"
      - "--providers.docker.watch"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
    labels:
      - "traefik.http.routers.traefik-ui.rule=Host(`traefik-ui.localhost`)"
      - "traefik.http.routers.traefik-ui.service=api@internal"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$gaS8tVEe$$MjqM8IlBvz2PRFEWcwha1/"
      - "traefik.http.middlewares.traefik-auth.basicauth.removeheader=true"
      - "traefik.http.routers.traefik-ui.middlewares=traefik-auth"
    networks:
      - monitoring
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - nginx_logs:/var/log/nginx
    networks:
      - monitoring

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    depends_on:
      - nginx
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri=http://nginx:80/stub_status
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./provisioning/dashboards:/var/lib/grafana/dashboards
      - ./provisioning/dashboards.yml:/etc/grafana/provisioning/dashboards/main.yaml
    networks:
      - monitoring

  load-generator:
    image: alpine:latest
    command: >
      /bin/sh -c "while true; do wget -q -O- http://nginx:80 > /dev/null; sleep 10; done"
    depends_on:
      - nginx
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  nginx_logs:
